apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nexus-cluster
  namespace: nexus-system
  labels:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: cluster
spec:
  serviceName: nexus-cluster-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: nexus
      app.kubernetes.io/component: cluster
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nexus
        app.kubernetes.io/component: cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nexus-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: nexus
        image: nexus:latest
        imagePullPolicy: Always
        ports:
        - name: transport
          containerPort: 7777
          protocol: UDP
        - name: api
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NEXUS_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NEXUS_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NEXUS_CLUSTER_BOOTSTRAP
          value: "nexus-cluster-0.nexus-cluster-headless.nexus-system.svc.cluster.local:7777,nexus-cluster-1.nexus-cluster-headless.nexus-system.svc.cluster.local:7777,nexus-cluster-2.nexus-cluster-headless.nexus-system.svc.cluster.local:7777"
        - name: NEXUS_LOG_LEVEL
          value: "info"
        - name: RUST_LOG
          value: "nexus=info"
        - name: NEXUS_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NEXUS_K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: data
          mountPath: /var/lib/nexus
        - name: config
          mountPath: /etc/nexus
          readOnly: true
        - name: tls-certs
          mountPath: /var/lib/nexus/certs
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: nexus-config
      - name: tls-certs
        secret:
          secretName: nexus-tls-certs
          defaultMode: 0600
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: nexus
                  app.kubernetes.io/component: cluster
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: nexus
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: nexus-cluster-headless
  namespace: nexus-system
  labels:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: cluster
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: cluster
  ports:
  - name: transport
    port: 7777
    targetPort: 7777
    protocol: UDP
  - name: api
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: nexus-api
  namespace: nexus-system
  labels:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: cluster
  ports:
  - name: api
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: api-tls
    port: 443
    targetPort: 8080
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: nexus-metrics
  namespace: nexus-system
  labels:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  selector:
    app.kubernetes.io/name: nexus
    app.kubernetes.io/component: cluster
  ports:
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP