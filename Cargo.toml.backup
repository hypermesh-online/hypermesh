# Temporarily disabled to avoid workspace conflict
# [workspace]
# members = [
#     "src/transport",
#     "src/consensus",
#     "src/assets",  # Asset Management System - Universal asset orchestration
#     "src/catalog",  # Blockchain-Native Compute Integration (JuliaVM + P2P)
#     "src/container",
#     "src/security",
#     "src/orchestration",
#     "src/integration",
#     "src/cli",
#     "protocols/stoq",  # STOQ protocol with QUIC transport
#     "src/mfn/layer2-dsr",  # MFN Layer 2: Dynamic Similarity Reservoir
#     "src/mfn/layer4-cpe",  # MFN Layer 4: Context Prediction Engine
#     "src/mfn/integration-tests",   # MFN Integration Testing Suite
#     "core",  # Core HyperMesh infrastructure
#     "benchmarks/mfn"  # MFN benchmarking suite
# ]
# resolver = "2"

[package]
name = "hypermesh"
version = "0.1.0"
edition = "2021"
authors = ["HyperMesh Team"]
license = "MIT"
repository = "https://github.com/hypermesh/hypermesh"

[dependencies]
# Core dependencies
tokio = { workspace = true }
tokio-util = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
clap = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tempfile = { workspace = true }
tokio-test = { workspace = true }
uuid = { workspace = true }
lazy_static = { workspace = true }

# Networking
quinn = { workspace = true }
rustls = { workspace = true }
rustls-pemfile = { workspace = true }
rcgen = { workspace = true }
webpki-roots = { workspace = true }
socket2 = { workspace = true }
bytes = { workspace = true }

# Async runtime
async-trait = { workspace = true }
futures = { workspace = true }

# Cryptography
ring = { workspace = true }
x509-parser = { workspace = true }
sha2 = { workspace = true }
blake3 = { workspace = true }
hex = { workspace = true }

# Storage - using pure-Rust sled instead of RocksDB
bincode = { workspace = true }
sled = { workspace = true }

# Collections and concurrency
dashmap = { workspace = true }
arc-swap = { workspace = true }
parking_lot = { workspace = true }
crossbeam = { workspace = true }

# Time handling
chrono = { workspace = true }

# Compression
zstd = { workspace = true }
lz4 = { workspace = true }
crc32fast = "1.3"

# eBPF
aya = "0.12"  # eBPF framework
libbpf-sys = "1.0"

# Machine learning - TEMPORARILY DISABLED for Phoenix SDK compilation
# candle-core = "0.7"  # Rust ML framework
# candle-nn = "0.7"

# Monitoring

# Testing (moved to dev-dependencies)

# Profiles are managed at workspace level

[dev-dependencies]
criterion = { workspace = true }
proptest = { workspace = true }
